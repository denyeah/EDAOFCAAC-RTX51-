C51 COMPILER V8.05a   ABSTASK                                                              07/18/2017 19:36:21 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE ABSTASK
OBJECT MODULE PLACED IN .\absTask.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SOFTWARE\ABS_TASK\absTask.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\a
                    -bsTask.lst) TABS(2) OBJECT(.\absTask.obj)

line level    source

   1          #include "../TASK/TASK.h"
   2          #include <rtx51tny.h>                 /* RTX-51 tiny functions & defines      */
   3          #include <stdio.h>
   4          #include <stdlib.h>
   5          #include "../TASK/setup.h"
   6          #include "../../HARDWARE/DEVICES/BUTTON/BUTTON.H"
   7          #include "../../HARDWARE/DEVICES/LED/LED.H"
   8          #include "../../HARDWARE/BSP/USART1.H"
   9          #include "../HARDWARE/DEVICES/SENSOR/ANGLE/ANGLE.h"
  10          #include "../COMMON_SOFTWARE/DATA_SCOPE/DataScope_DP.h"
  11          #include "../COMMON_SOFTWARE/STORAGE/STORAGE.h"
*** WARNING C322 IN LINE 54 OF ../HARDWARE/BSP/STC15_EEPROM.h: unknown identifier
*** WARNING C322 IN LINE 54 OF ../HARDWARE/BSP/STC15_EEPROM.h: unknown identifier
  12          #include "../../HARDWARE/BSP/STC15_PWM.H"
  13          #include "../SOFTWARE/ALGORITHM/PID/PID.H"
  14          #include "../../HARDWARE/DEVICES/MOTOR/DC_MOTOR/MOTOR.h"
  15          
  16          #define INIT 0//初始化
  17          #define BUTTON 1//按键检测
  18          #define ANGLE 2//角度控制
  19          #define MODE_1 3//题目一
  20          #define MODE_2 4//题目二
  21          
  22          #define MODE_3 5//
  23          #define MODE_4 6//
  24          
  25          #define DEBUG 7
  26          
  27          
  28          void Task_Init() _task_ INIT
  29          {
  30   1        setup();
  31   1      //  os_create_task(BUTTON);
  32   1        os_create_task(ANGLE);
  33   1        os_create_task(DEBUG);
  34   1      
  35   1        os_delete_task(INIT);
  36   1      
  37   1      }
  38          
  39          void Task_Button() _task_ BUTTON
  40          {
  41   1        //buttonScan();
  42   1      //  if(getButtonState(BUTTON1))
  43   1      //  {
  44   1      //    os_create_task(MODE_1);
  45   1      //    os_delete_task(BUTTON);
  46   1      //  }
  47   1      //  else if(getButtonState(BUTTON2))
  48   1      //  {
  49   1      //    os_create_task(MODE_2);
  50   1      //    os_delete_task(BUTTON);
  51   1      //  }
  52   1      //  else if(getButtonState(BUTTON3))
C51 COMPILER V8.05a   ABSTASK                                                              07/18/2017 19:36:21 PAGE 2   

  53   1      //  {
  54   1      //    os_create_task(MODE_3);
  55   1      //    os_delete_task(BUTTON);   
  56   1      //  }
  57   1      //  else if(getButtonState(BUTTON4))
  58   1      //  {
  59   1      //    os_create_task(MODE_4);
  60   1      //    os_delete_task(BUTTON);
  61   1      //  } 
  62   1      }
  63          
  64          void Task_Angle() _task_ ANGLE //获取角度并将角度带入pid算法中计算
  65          {
  66   1        openPID(PID_1);
  67   1        open_DC_Motor(LEFT_MOTOR);
  68   1        open_DC_Motor(RIGHT_MOTOR);
  69   1        PID_setTargetParameter(PID_1,100);
  70   1        for (;;)
  71   1        {
  72   2          
  73   2          PID_setActualParameter(PID_1, getAngle(PRESENT_ANGLE));//设置pid的实际参数,并读取角度
  74   2        //  if(PID_getState(PID_1)&&(getDC_MotorState(LEFT_MOTOR)||getDC_MotorState(RIGHT_MOTOR)))
  75   2          {
  76   3          PID(PID_1);//PID算法
  77   3          setBoardWithAngle(PID_getOutput(PID_1)+PID_getParameter(PID_1));
  78   3      
  79   3          }
  80   2          os_wait(K_IVL,10,0);//将进程周期性堵塞
  81   2      
  82   2        }
  83   1      }
  84          
  85          void Task_Mode_1() _task_ MODE_1
  86          {
  87   1        
  88   1      }
  89          
  90          void Task_Mode_2() _task_ MODE_2
  91          {
  92   1        
  93   1      }
  94          void Debug()  _task_   DEBUG
  95          {   for(;;)
  96   1        {
  97   2         sendScopeData (getAngle(PRESENT_ANGLE),1);
  98   2            os_wait(K_IVL,25,0);//将进程周期性堵塞
  99   2        
 100   2        }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
